%% -*- mode: erlang; erlang-indent-level: 4; indent-tabs-mode: nil -*-
%% -------------------------------------------------------------------
%%
%% Copyright (c) 2023 Workday, Inc.
%%
%% This file is provided to you under the Apache License,
%% Version 2.0 (the "License"); you may not use this file
%% except in compliance with the License.  You may obtain
%% a copy of the License at
%%
%%   http://www.apache.org/licenses/LICENSE-2.0
%%
%% Unless required by applicable law or agreed to in writing,
%% software distributed under the License is distributed on an
%% "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
%% KIND, either express or implied.  See the License for the
%% specific language governing permissions and limitations
%% under the License.
%%
%% -------------------------------------------------------------------
%%

{minimum_otp_vsn, "21"}.

{erl_opts, [
    %% DO NOT use option 'inline' - see syslog.erl for explanation.
    debug_info,
    warnings_as_errors
]}.

{artifacts, ["priv/syslog_nif.so"]}.

{plugins, [pc]}.

{port_specs, [
    {"priv/syslog_nif.so", ["c_src/*.c"]}
]}.
{port_env, [
    {"CFLAGS", "-Wall -O3 -fPIC"}
]}.

{provider_hooks, [
    {post, [
        {compile,   {pc, compile}},
        {clean,     {pc, clean}}
    ]}
]}.

{cover_enabled, true}.
{cover_opts, [verbose]}.

{profiles, [
    {timing, [
        %% Special configuration for the NIF timing tests.
        %% Run 'rebar3 as timing eunit' to measure overall throughput
        %% directly through the NIF with no intervening logger overhead.
        {cover_enabled, false},
        {erl_opts, [
            %% Optional macros to override defaults
            % {d, 'TIMING_FACIL', user},    %% Log facility
            % {d, 'TIMING_LEVEL', notice},  %% Log severity
            % {d, 'TIMING_PROCS', 10},      %% Number of parallel senders
            % {d, 'TIMING_MSGS',  10000},   %% Messages per sender

            %% Required to compile the timing test
            {d, 'TIMING_TESTS'}
        ]},
        {eunit_opts,  [verbose]},
        {eunit_tests, [{module, syslog}]}
    ]}
]}.

{dialyzer, [
    {warnings, [
        error_handling,
        unknown,
        unmatched_returns
    ]}
]}.

{xref_checks, [
    deprecated_function_calls,
    deprecated_functions,
    exports_not_used,
    locals_not_used,
    undefined_function_calls,
    undefined_functions
]}.

{alias, [
    {check, [xref, dialyzer]},
    {test,  [ct, cover]}
]}.
